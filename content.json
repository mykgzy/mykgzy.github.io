{"meta":{"title":"网络自动化大篷车","subtitle":"","description":"薛定谔的记忆小本子","author":"tg","url":"https://mykgzy.github.io","root":"/"},"pages":[{"title":"Code","date":"2023-02-27T00:23:54.000Z","updated":"2023-02-27T00:24:25.642Z","comments":false,"path":"Code/index.html","permalink":"https://mykgzy.github.io/Code/index.html","excerpt":"","text":""},{"title":"Life","date":"2023-02-25T08:51:35.000Z","updated":"2023-02-25T08:51:35.556Z","comments":true,"path":"Life/index.html","permalink":"https://mykgzy.github.io/Life/index.html","excerpt":"","text":""},{"title":"Linux","date":"2023-02-25T08:50:27.000Z","updated":"2023-02-25T09:00:27.629Z","comments":false,"path":"Linux/index.html","permalink":"https://mykgzy.github.io/Linux/index.html","excerpt":"","text":""},{"title":"about","date":"2023-02-24T00:10:06.000Z","updated":"2023-02-24T00:11:23.301Z","comments":true,"path":"about/index.html","permalink":"https://mykgzy.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-02-24T00:36:51.000Z","updated":"2023-02-24T00:38:01.983Z","comments":true,"path":"categories/index.html","permalink":"https://mykgzy.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Sed命令总结","slug":"linux","date":"2023-02-24T16:00:00.000Z","updated":"2023-02-28T14:43:10.577Z","comments":true,"path":"2023/02/25/linux/","link":"","permalink":"https://mykgzy.github.io/2023/02/25/linux/","excerpt":"","text":"sed替换的基本语法为: e或--expression= 以选项中指定的script来处理输入的文本文件。 f或--file= 以选项中指定的script文件来处理输入的文本文件。 h或--help 显示帮助。 n或--quiet或--silent 仅显示script处理后的结果。 V或--version 显示版本信息。 动作说明： a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～ c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！ d ：删除，因为是删除啊，所以 d 后面通常不接任何东东； i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)； p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～ s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！ sed &#39;s/原字符串/替换字符串/&#39; 单引号里面,s表示替换,三根斜线中间是替换的样式,特殊字符需要使用反斜线”\\”进行转义。 单引号” ‘ ’”是没有办法用反斜线”\\”转义的,这时候只要把命令中的单引号改为双引号就行了,格式如下： # 要处理的字符包含单引号sed &quot;s/原字符串包含&#39;/替换字符串包含&#39;/&quot; 命令中的三根斜线分隔符可以换成别的符号,有时候替换目录字符串的时候有较多斜线，这个时候换成其它的分割符是较为方便,只需要紧跟s定义即可。 # 将分隔符换成问号”?”:sed &#39;s?原字符串?替换字符串?&#39; 可以在末尾加g替换每一个匹配的关键字,否则只替换每行的第一个,例如: # 替换所有匹配关键字sed &#39;s/原字符串/替换字符串/g&#39; 一些特殊字符的使用 ”^”表示行首 ”$”符号如果在引号中表示行尾，但是在引号外却表示末行(最后一行) 1234567# 注意这里的 &quot; &amp; &quot; 符号，如果没有 “&amp;”，就会直接将匹配到的字符串替换掉sed &#x27;s/^/添加的头部&amp;/g&#x27; #在所有行首添加sed &#x27;s/$/&amp;添加的尾部/g&#x27; #在所有行末添加sed &#x27;2s/原字符串/替换字符串/g&#x27; #替换第2行sed &#x27;$s/原字符串/替换字符串/g&#x27; #替换最后一行sed &#x27;2,5s/原字符串/替换字符串/g&#x27; #替换2到5行sed &#x27;2,$s/原字符串/替换字符串/g&#x27; #替换2到最后一行 6.批量替换字符串 sed -i &quot;s/查找字段/替换字段/g&quot; grep 查找字段 -rl 路径sed -i &quot;s/oldstring/newstring/g&quot; grep oldstring -rl yourdir` sed处理过的输出是直接输出到屏幕上的,使用参数”i”直接在文件中替换。 # 替换文件中的所有匹配项sed -i &#39;s/原字符串/替换字符串/g&#39; filename 多个替换可以在同一条命令中执行,用分号”;”分隔，其格式为: # 同时执行两个替换规则sed &#39;s/^/添加的头部&amp;/g；s/$/&amp;添加的尾部/g&#39;","categories":[{"name":"Linux","slug":"Linux","permalink":"https://mykgzy.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mykgzy.github.io/tags/Linux/"},{"name":"sed","slug":"sed","permalink":"https://mykgzy.github.io/tags/sed/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-02-23T00:37:23.011Z","updated":"2023-02-23T00:37:23.011Z","comments":true,"path":"2023/02/23/hello-world/","link":"","permalink":"https://mykgzy.github.io/2023/02/23/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"Linux","slug":"Linux","permalink":"https://mykgzy.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mykgzy.github.io/tags/Linux/"},{"name":"sed","slug":"sed","permalink":"https://mykgzy.github.io/tags/sed/"}]}